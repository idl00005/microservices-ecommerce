{
	"info": {
		"_postman_id": "43c1f06b-0cb8-4c4b-b9d2-8a869d60c688",
		"name": "Pedido Tests",
		"description": "Colección para probar el recurso PedidoResource",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42715512"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El código de respuesta es 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"La respuesta es un JWT valido\", function() {",
							"    var token = pm.response.text();",
							"    pm.expect(token).to.be.a('string');",
							"    pm.environment.set(\"jwt\", token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{userAdmin}}\",\n  \"password\": \"{{userAdminPass}}\"\n}"
				},
				"url": {
					"raw": "{{url_base}}/autenticacion/login",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"autenticacion",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear Pedido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Respuesta exitosa y formato correcto\", function () {",
							"    const pedido = pm.response.json();",
							"    ",
							"    // Comprobar que el objeto tiene las propiedades necesarias",
							"    pm.expect(pedido).to.have.property(\"id\");",
							"    pm.expect(pedido).to.have.property(\"usuarioId\");",
							"    pm.expect(pedido).to.have.property(\"productoId\");",
							"    pm.expect(pedido).to.have.property(\"ordenId\");",
							"    pm.expect(pedido).to.have.property(\"cantidad\");",
							"    pm.expect(pedido).to.have.property(\"precioTotal\");",
							"    pm.expect(pedido).to.have.property(\"estado\");",
							"    pm.expect(pedido).to.have.property(\"fechaCreacion\");",
							"    ",
							"    // Guardar el id del pedido en variable de entorno",
							"    pm.environment.set(\"pedidoId\", pedido.id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"usuarioId\": \"{{userAdmin}}\",\n  \"productoId\": 10,\n  \"ordenId\": 2001,\n  \"cantidad\": 3,\n  \"precioTotal\": 149.97,\n  \"estado\": \"PENDIENTE\",\n  \"fechaCreacion\": \"2025-06-04T10:30:00\"\n}\n"
				},
				"url": {
					"raw": "{{url_base}}/pedidos",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"pedidos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener pedidos filtrados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Respuesta exitosa y formato correcto\", function () {",
							"    const pedidos = pm.response.json();",
							"    pm.expect(pedidos).to.be.an('array');",
							"",
							"    // Comprobar que cada pedido tiene los campos requeridos",
							"    pedidos.forEach(pedido => {",
							"        pm.expect(pedido).to.have.property(\"id\").that.is.a('number');",
							"        pm.expect(pedido).to.have.property(\"productoId\").that.is.a('number');",
							"        pm.expect(pedido).to.have.property(\"cantidad\").that.is.a('number');",
							"        pm.expect(pedido).to.have.property(\"estado\").that.is.a('string');",
							"        pm.expect(pedido).to.have.property(\"precioTotal\").that.is.a('number');",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{url_base}}/pedidos?estado=PENDIENTE&pagina=1&tamanio=1&usuarioId=idl00005@red.ujaen.es",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"pedidos"
					],
					"query": [
						{
							"key": "estado",
							"value": "PENDIENTE"
						},
						{
							"key": "pagina",
							"value": "1"
						},
						{
							"key": "tamanio",
							"value": "1"
						},
						{
							"key": "usuarioId",
							"value": "idl00005@red.ujaen.es"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener pedido por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Respuesta con campos y tipos correctos\", function () {",
							"    const pedido = pm.response.json();",
							"",
							"    pm.expect(pedido).to.be.an('object');",
							"    pm.expect(pedido).to.have.property(\"id\").that.is.a('number');",
							"    pm.expect(pedido).to.have.property(\"usuarioId\").that.is.a('string');",
							"    pm.expect(pedido).to.have.property(\"productoId\").that.is.a('number');",
							"    pm.expect(pedido).to.have.property(\"ordenId\").that.is.a('number');",
							"    pm.expect(pedido).to.have.property(\"cantidad\").that.is.a('number');",
							"    pm.expect(pedido).to.have.property(\"precioTotal\").that.is.a('number');",
							"    pm.expect(pedido).to.have.property(\"estado\").that.is.a('string');",
							"    pm.expect(pedido).to.have.property(\"fechaCreacion\").that.is.a('string');",
							"",
							"    // Validar que fechaCreacion tenga formato ISO 8601 (YYYY-MM-DDTHH:mm:ss)",
							"    const iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/;",
							"    pm.expect(pedido.fechaCreacion).to.match(iso8601Regex);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{url_base}}/pedidos/{{pedidoId}}",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"pedidos",
						"{{pedidoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cambiar estado del pedido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"estado\" : \"COMPLETADO\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_base}}/pedidos/{{pedidoId}}/estado",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"pedidos",
						"{{pedidoId}}",
						"estado"
					]
				}
			},
			"response": []
		},
		{
			"name": "Escribir valoración",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"puntuacion\" : 5,\n    \"comentario\" : \"Muy buen producto\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_base}}/pedidos/{{pedidoId}}/valoracion",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"pedidos",
						"{{pedidoId}}",
						"valoracion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener valoracion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Respuesta tiene la estructura correcta\", function () {",
							"    const response = pm.response.json();",
							"",
							"    pm.expect(response).to.have.property(\"datos\").that.is.an(\"array\");",
							"    pm.expect(response).to.have.property(\"pagina\").that.is.a(\"number\");",
							"    pm.expect(response).to.have.property(\"tamanio\").that.is.a(\"number\");",
							"    pm.expect(response).to.have.property(\"total\").that.is.a(\"number\");",
							"",
							"    response.datos.forEach(valoracion => {",
							"        pm.expect(valoracion).to.have.property(\"id\").that.is.a(\"number\");",
							"        pm.expect(valoracion).to.have.property(\"idUsuario\").that.is.a(\"string\");",
							"        pm.expect(valoracion).to.have.property(\"puntuacion\").that.is.a(\"number\");",
							"        pm.expect(valoracion).to.have.property(\"comentario\").that.is.a(\"string\");",
							"        pm.expect(valoracion).to.have.property(\"fechaCreacion\").that.is.a(\"string\");",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url_base}}/catalogo/10/valoraciones",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"catalogo",
						"10",
						"valoraciones"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "pedidoId",
			"value": "",
			"type": "string"
		}
	]
}