mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=https://example.com
smallrye.jwt.path.groups=roles
quarkus.http.port=8083
quarkus.profile=init

##Configuración básica del datasource de PostgreSQL
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=ignacio_ad
quarkus.datasource.password=1234
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/catalogoBD
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
#
##Configuración de Hibernate ORM
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
#
## Configuración Kafka
mp.messaging.outgoing.product-events.connector=smallrye-kafka
mp.messaging.outgoing.product-events.topic=productos-updated
mp.messaging.outgoing.product-events.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
mp.messaging.outgoing.product-events.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#
## Canal para recibir eventos de stock
mp.messaging.incoming.eventos-stock.connector=smallrye-kafka
mp.messaging.incoming.eventos-stock.topic=eventos-stock
mp.messaging.incoming.eventos-stock.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

## Recibir eventos de pedidos (valoraciones)
mp.messaging.incoming.valoraciones-in.connector=smallrye-kafka
mp.messaging.incoming.valoraciones-in.topic=valoraciones
mp.messaging.incoming.valoraciones-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.valoraciones-in.bootstrap.servers=localhost:9092

## Kafka bootstrap server
kafka.bootstrap.servers=localhost:9092

quarkus.http.cors.enabled=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization