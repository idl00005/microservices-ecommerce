mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=https://example.com
smallrye.jwt.path.groups=roles
quarkus.http.port=8081

#Configuración básica del datasource de PostgreSQL
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=ignacio_ad
quarkus.datasource.password=1234
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/carritoBD

#Configuración de Hibernate ORM
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

# Configuración del cliente REST para el servicio de catálogo
catalogo-api/mp-rest/url=http://localhost:8083/catalogo
catalogo-service.url=http://localhost:8083/catalogo/
catalogo-api/mp-rest/scope=javax.inject.Singleton
auth-service.url=http://localhost:8080/autenticacion/login

# Configuración Kafka
mp.messaging.incoming.productos-in.connector=smallrye-kafka

# Configuración para obtener actualizaciones del catálogo
mp.messaging.incoming.productos-in.topic=productos-updated
mp.messaging.incoming.productos-in.group.id=carrito_servicio
mp.messaging.incoming.productos-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.productos-in.auto.offset.reset=earliest

# Configuración para crear los pedidos
# Configuración del emisor (Producer)
mp.messaging.outgoing.carrito-a-pedidos-out.connector=smallrye-kafka
mp.messaging.outgoing.carrito-a-pedidos-out.topic=pedidos
mp.messaging.outgoing.carrito-a-pedidos-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
mp.messaging.outgoing.carrito-a-pedidos-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Canal para publicar eventos de stock (por ejemplo, al crear reservas de stock)
mp.messaging.outgoing.eventos-stock.connector=smallrye-kafka
mp.messaging.outgoing.eventos-stock.topic=eventos-stock
mp.messaging.outgoing.eventos-stock.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
mp.messaging.outgoing.eventos-stock.key.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# Kafka bootstrap server
mp.messaging.connector.smallrye-kafka.bootstrap.servers=localhost:9092

# Stripe
stripe.secret-key=sk_test_51RTK0006qtBCiEnjgcPndANKSxzyw1fCdIhzhQBNxiBWlAdjsWjoD4wmPbHcqmFDD5vTTDxvnvrNAtgQidkVuE6i00C0QR7j9h
stripe.webhook.secret=whsec_a7f7416e7ce0902e5f3cbd891a948860c3444d25670202f365128c2577002fed

# Credenciales para el servicio de autenticación
auth.admin.user=idl00005@red.ujaen.es
auth.admin.password=1234

# Recibir eventos de fuera
quarkus.http.host=0.0.0.0

